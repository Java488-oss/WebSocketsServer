#postgress sql server (home)
#server.port=8050
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://192.168.1.9:5432/Test
#spring.datasource.username=sa
#spring.datasource.password=pin@#1358
#spring.jpa.show-sql=true
#spring.mvc.hiddenmethod.filter.enabled=true
##spring.jpa.properties.hibernate.format_sql = true
##hibernate.physical_naming_strategy=com.example.TestSpring.StrategyCase.CustomPhysicalNamingStrategy
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
##spring.jpa.hibernate.ddl-auto = create-drop


#ms sql server (work)
#
server.port=8050
server.netty.initial-buffer-size=1048576B
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=jdbc:sqlserver://192.168.159.97;database=Test
spring.datasource.username=sa
spring.datasource.password=Sql8036
#spring.jpa.show-sql=true
spring.mvc.hiddenmethod.filter.enabled=true
#spring.jpa.properties.hibernate.format_sql = true
#hibernate.physical_naming_strategy=com.example.TestSpring.StrategyCase.CustomPhysicalNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = create
#
#
##Postgres Sql
##spring.datasource.driverClassName=org.postgresql.Driver
##spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect